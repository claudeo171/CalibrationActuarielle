@using LiveChartsCore.SkiaSharpView.Blazor;
@using Newtonsoft.Json;
@using OnlineCalibrator.Shared;
@using System
@using System.IO
@using System.Text.RegularExpressions
@using Microsoft.Extensions.Logging
@using SkiaSharp;
@using Stochastique.Enums;
@using Stochastique;
@using LiveChartsCore.SkiaSharpView.Painting;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager NavManager
@inject DonneeContainer donneeContainer
@page "/AnalyseDistribution"
<nav class="navbar navbar-expand-lg navbar-light bg-light mynavbar" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/Import">Import des données</a></li>
        <li class="breadcrumb-item"><a href="/CalibrateDistribution">Calibration des données (@DonneesImportes.NomData)</a></li>
        <li class="breadcrumb-item active">Identification de la loi</li>
    </ol>
</nav>
<div class="row">

    <div class="col-xl-6">
        <div class="card">
            <div class="card-header">
                Tests stratistiques
            </div>
            <div class="card-body">
                <table>
                    <thead>
                        <tr>
                            <th>Loi</th>
                            <th>LogLikelihood</th>
                            <th>AIC</th>
                            <th>BIC</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (distributions != null)
                        {
                            @foreach (var test in distributions)
                            {
                                <tr>
                                    <td>@test.Distribution</td>
                                    <td>@test.LogLikelihood</td>
                                    <td>@test.AIC</td>
                                    <td>@test.BIC</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>


</div>


@code {
    private bool isInit;
    private ChartViewModelLine? QQPlot;
    private List<DistributionWithDatas>? distributions;
    private DonneesImportes? DonneesImportes;
    private bool IsDiscreteDistribution;
    private bool IncludeTrunkatedDistributions;
    protected override async void OnInitialized()
    {

        DonneesImportes = donneeContainer.Value;
        DonneesImportes.ActualData?.CalculerTest();
        distributions = DonneesImportes.ActualData?.GetAllDistributions(IsDiscreteDistribution, IncludeTrunkatedDistributions);
        isInit = true;
        StateHasChanged();
    }



}